//? Документация к api ------------------------

//! Описание
// Api для заказа документов

//! Таблицы базы данных
//

//! Метод 
/**
 * 
 */

import axios from 'axios'
import withSnackbar from "@/js/components/mixins/withSnackbar";

export default {
    mixins: [withSnackbar],
    //*----------------------------------------
    //!         Модель данных
    //*----------------------------------------
    /**
     * id - BIGINT
     * call_schedule - JSON - not null
     * place_id - int - not null - FK
     */
    //*----------------------------------------




    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение справок
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *CERTIFICATES* (Справки)
    //? Возвращается полная таблица данных JSON формата
    //! Требование ----------------------------
    //! Отсутсвуют
    //!----------------------------------------
    getCertificates() {
        axios.get('/api/getters/get_certificates')
        .then(res => {return res.data.certificates;})
        .catch(ex => {this.showError("Произошла ошибка получения данных: " + ex);});
    },




    //*----------------------------------------
    //!         Работа с данными*
    //*---------Имеется модификация------------
    //*Заказ нового документа
    //! Комментарий ---------------------------
    //? Реализуется сохранения данных в таблице *CERTIFICATES* (Справки)
    //! Требование ----------------------------
    //! Уточнить структуру данных. 
    //!----------------------------------------
    save(data) {
        return axios.post('/api/student/certificate/save', {"data": data.data, "type": data.type})
        .then(res => {
            this.showMessage("Запрос отправлен");
            return true;
        })
        .catch(exp => {
            this.showError("Произошла ошибка: " + exp);
            return false;
        });
    },

    //*Уведомление и фикусация о выполнении
    //*------------Модификация-----------------
    //! Комментарий ---------------------------
    //? Реализуется уведомление пользователя о готовности заказанного документа и занесение указателя в БД о готовности
    //! Требование ----------------------------
    //! Реализовать back-end для api 
    //!----------------------------------------
    sendEmailDone(answer) {
        axios.post('/api/chancellery/certificate/sendEmailDone/' + answer.id + '/' + answer.email)
        .then(result => {
            this.showMessage("Сообщение отправлено");
            return true;
        })
        .catch(ex => {this.showError("Произошла ошибка: " + ex); return false;});
    },

    //*Ответ канцелярии заказчику, в случае если справку нельзя сделать, при том, что справка не будет зафиксирована о выполнении
    //*------------Модификация-----------------
    //! Комментарий ---------------------------
    //? Реализуется уведомление пользователя об отказе изготавить документ и занесение указателя в БД об отказе
    //! Требование ----------------------------
    //! Реализовать back-end для api 
    //!----------------------------------------
    sendEmailAnswer(answer) {
        axios.post('/api/chancellery/certificate/sendEmailAnswer/' + answer.id + '/' + answer.email, {"answer": answer.text})
        .then(result => {
            this.showMessage("Сообщение отправлено!");
            return true;
        })
        .catch(ex => {
            this.showError("Произошла ошибка: " + ex);
            return false;
        });
    }
}
