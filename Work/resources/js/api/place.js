//? Документация к api ------------------------

//! Описание
// Api для работы с местами проведения учебного дня

//! Таблицы базы данных
//

//! Метод 
/**
 * 
 */

import axios from 'axios'

export default {
    //*----------------------------------------
    //!         Модель данных
    //*----------------------------------------
    /**
     * id - BIGINT
     * place_name - string - not null
     */
    //*----------------------------------------
    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение мест проведения
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *PLACES* (Места проведения занятий)
    //? Возвращается полная таблица данных JSON формата
    //! Требование ----------------------------
    //!----------------------------------------
    getPlaces() {
        return axios.get('/api/getters/places')
            .then(res => {
                return res.data.places;
            })
            .catch(() => {
                return undefined;
            });
    },
    //*----------------------------------------
    //!         Работа с данными
    //*----------------------------------------
    //*Сохранение мест проведения
    //! Комментарий ---------------------------
    //? Реализуется сохранение данных в таблице *PLACES* (Места проведения занятий)
    //? Передается объект
    //! Требование ----------------------------
    //!----------------------------------------
    savePlace(place) {
        return axios.post('/api/save/place', place)
            .then(res => {
                return res.data.id;
            })
            .catch(() => {
                return false;
            });
    },
    //*Редактирование мест проведения
    //! Комментарий ---------------------------
    //? Реализуется изменение данных в таблице *PLACES* (Места проведения занятий)
    //? Передается объект и заменет оригинал по id
    //! Требование ----------------------------
    //!----------------------------------------
    editPlace(place) {
        return axios.post('/api/edit/place/', place)
            .then(() => {
                return true;
            })
            .catch(() => {
                return false;
            });
    },
    //*Логическое удаление места проведения
    //! Комментарий ---------------------------
    //? Реализуется стирание данных в таблице *PLACES* (Места проведения занятий) С ВОЗМОЖНОСТЬЮ ВОССТАНОВЛЕНИЯ
    //? Передается id места проведения
    //! Требование ----------------------------
    //!----------------------------------------
    deletePlace(place_id) {
        return axios.post('/api/delete/place/' + place_id)
            .then(() => {
                return true;
            })
            .catch(() => {
                return false;
            });
    },

    exportPlace() {
        return axios({
                url: '/api/functions/download_place_export',
                method: 'GET',
                responseType: 'blob',
            })
            .then((res) => {
                return res;
            })
            .catch((er) => {
                return er;
            });
    },
    importPlace(file) {
        return axios.post('/api/functions/import_place', file, {
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            })
            .then(() => {
                return true;
            })
            .catch(() => {
                return false;
            });
    }
}
