//? Документация к api ------------------------

//! Описание
// Api для работы с местами проведения учебного дня

//! Таблицы базы данных
//

//! Метод 
/**
 * 
 */

import axios from 'axios'

export default {
    //*----------------------------------------
    //!         Модель данных
    //*----------------------------------------
    /**
     * id - BIGINT
     * place_name - string - not null
     */
    //*----------------------------------------




    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение мест проведения
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *PLACES* (Места проведения занятий)
    //? Возвращается полная таблица данных JSON формата
    //! Требование ----------------------------
    //! Отсутсвует
    //!----------------------------------------
    getPlaces(_this) {
        return axios.get('/api/getters/places')
        .then(result => { return result.data.places; })
        .catch(exception => { _this.showError("Ошибка получения данных!"); return undefined;});
    },

    //*----------------------------------------
    //!         Работа с данными
    //*----------------------------------------
    //*Сохранение мест проведения
    //! Комментарий ---------------------------
    //? Реализуется сохранение данных в таблице *PLACES* (Места проведения занятий)
    //? Передается объект
    //! Требование ----------------------------
    //! Реализовать back-end для api && Уточнить струткуру данных
    //!----------------------------------------
    savePlace(place, _this) {
        return axios.post('/api/save/place', place)
        .then(result => { _this.showMessage("Выполнено!"); return result.data.id; })
        .catch(exception => { _this.showError("Ошибка выполнения!"); return false; });
    },

    //*Редактирование мест проведения
    //! Комментарий ---------------------------
    //? Реализуется изменение данных в таблице *PLACES* (Места проведения занятий)
    //? Передается объект и заменет оригинал по id
    //! Требование ----------------------------
    //! Реализовать back-end для api && Уточнить струткуру данных
    //!----------------------------------------
    editPlace(place, _this) {
        return axios.post('/api/edit/place/', place)
        .then(result => { _this.showMessage("Выполнено!"); return true; })
        .catch(exception => { _this.showError("Ошибка выполнения!"); return false; });
    },

    //*Логическое удаление места проведения
    //! Комментарий ---------------------------
    //? Реализуется стирание данных в таблице *PLACES* (Места проведения занятий) С ВОЗМОЖНОСТЬЮ ВОССТАНОВЛЕНИЯ
    //? Передается id места проведения
    //! Требование ----------------------------
    //! Реализовать back-end для api
    //!----------------------------------------
    deletePlace(place_id, _this) {
        console.log(place_id);
        return axios.post('/api/delete/place/' + place_id)
        .then(result => { _this.showMessage("Выполнено!"); return true; })
        .catch(exception => { _this.showError("Ошибка выполнения!"); return false;});
    },
}