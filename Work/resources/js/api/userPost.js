//Api для работы с ролями системы

import axios from 'axios'

export default {
    //*----------------------------------------
    //!         Модель данных
    //*----------------------------------------
    /**
     * id - BIGINT
     * name - string - not null
     * slud - string - not null
     * privilegie - json - not null
     */
    //*----------------------------------------
    

    //*----------------------------------------
    //!         Установка данных
    //*----------------------------------------
    //*Устанавливаеь привилегия на роль
    //! Комментарий ---------------------------
    //? Реализуется запись данных в таблицу *USERSPOST* (Роли)
    //? Возвращается овет от сервера с полем {success}
    //! Входные параметры
    /** data :
     *      id : id роли которую необходимо изменить
     *      privilegies : объект формата JSON в котором описаны доступные пользователю привелегии
    */
    //! Требование ----------------------------
    //! Не работает
    //!---------------------------------------
    setPostPrivilegies(data, _this) {
        return axios.post('/api/edit/post', data)
        .then(() => { _this.showMessage("Выполнено!"); return true; })
        .catch(() => { _this.showError("Ошибка выполнения!"); return false; });
    },


    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение полной информации для всех ролей 
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *USERSPOST* (Роли)
    //? Возвращается {} таблица данных JSON формата
    //! Требование ----------------------------
    //!---------------------------------------
    getPostsForManagement(_this) {
        return axios.get('/api/getters/posts_for_management')
        .then(result => { return result.data.posts;})
        .catch(() => { _this.showError("Ошибка получения данных!"); return undefined;});
    },

    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение полной информации для всех ролей 
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *USERSPOST* (Роли)
    //? Возвращается {} таблица данных JSON формата
    //! Требование ----------------------------
    //!---------------------------------------
    getPostsFull(_this) {
        return axios.get('/api/getters/posts_full')
        .then(result => { return result.data.posts;})
        .catch(() => { _this.showError("Ошибка получения данных!"); return undefined;});
    },

    //*----------------------------------------
    //*Получение данных для выпадающего списка 
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *USERSPOST* (Роли)
    //? Возвращается {} таблица данных JSON формата
    //! Требование ----------------------------
    //!---------------------------------------
    getPostsForCombobox(_this) {
        //return axios.get('/api/getters/posts_for_combobox')
        return axios.get('/api/getters/posts_for_management')
        .then(result => { return result.data.posts;})
        .catch(() => { _this.showError("Ошибка получения данных!"); return undefined;});
    },
    
    //*Сохранение роли
    //! Комментарий ---------------------------
    //? Реализуется запись данных в таблицу *USERSPOST* (Роли)
    //! Требование ----------------------------
    //! Реализовать back-end для api
    //!----------------------------------------
    saveUserPost(post, _this) {
        return axios.post('/api/save/post/', post)
        .then(result => { _this.showMessage("Выполнено!"); return result.data.id; })
        .catch(() => { _this.showError("Ошибка выполнения!"); return false; });
    },

    //*Удаление роли
    //! Комментарий ---------------------------
    //? Реализуется удаление данных из таблицы *USERSPOST* (Роли)
    //? Передаётся id в функцию
    //! Требование ----------------------------
    //! Реализовать back-end для api
    //!----------------------------------------
    deleteUserPost(post_id, _this) {
        return axios.post('/api/delete/post/' + post_id)
        .then(() => { _this.showMessage("Выполнено!"); return true; })
        .catch(() => { _this.showError("Ошибка выполнения!"); return false; });
    },

    //*Редактирование роли
    //! Комментарий ---------------------------
    //? Реализуется редактирование данных в таблице *USERSPOST* (Роли)
    //? Передаётся ОДИН экземпляр записи 
    //! Требование ----------------------------
    //! Реализовать back-end для api
    //!----------------------------------------
    editUserPost(post, _this) {
        return axios.post('/api/edit/post/', post)
        .then(() => { _this.showMessage("Выполнено!"); return true; })
        .catch(() => { _this.showError("Ошибка выполнения!"); return false; });
    },
}

    //?----------------------------------------
    //?         Документация
    //?----------------------------------------
    //*