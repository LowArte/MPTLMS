//Api для работы с ролями системы

import axios from 'axios'

export default {
    //*----------------------------------------
    //!         Модель данных
    //*----------------------------------------
    /**
     * id - BIGINT
     * name - string - not null
     * slud - string - not null
     * privilegie - json - not null
     */
    //*----------------------------------------
    //*----------------------------------------
    //!         Установка данных
    //*----------------------------------------
    //*Устанавливаеь привилегия на роль
    //! Комментарий ---------------------------
    //? Реализуется запись данных в таблицу *USERSPOST* (Роли)
    //? Возвращается овет от сервера с полем {success}
    //! Входные параметры
    /** data :
     *      id : id роли которую необходимо изменить
     *      privilegies : объект формата JSON в котором описаны доступные пользователю привелегии
    */
    //! Требование ----------------------------
    //!---------------------------------------
    setPostPrivilegies(data) 
    {
        return axios.post('/api/edit/post', data)
        .then(() => {return true;})
        .catch(() => {return false;});
    },
    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение полной информации для всех ролей 
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *USERSPOST* (Роли)
    //? Возвращается {} таблица данных JSON формата
    //! Требование ----------------------------
    //!---------------------------------------
    getPostsForManagement() 
    {
        return axios.get('/api/getters/posts_for_management')
        .then(res => {return res.data.posts;})
        .catch(() => {return undefined;});
    },
    //*----------------------------------------
    //!         Получение данных
    //*----------------------------------------
    //*Получение полной информации для всех ролей 
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *USERSPOST* (Роли)
    //? Возвращается {} таблица данных JSON формата
    //! Требование ----------------------------
    //!---------------------------------------
    getPostsFull() 
    {
        return axios.get('/api/getters/posts_full')
        .then(res => {return res.data.posts;})
        .catch(() => {return undefined;});
    },
    //*----------------------------------------
    //*Получение данных для выпадающего списка 
    //! Комментарий ---------------------------
    //? Реализуется получение данных из таблицы *USERSPOST* (Роли)
    //? Возвращается {} таблица данных JSON формата
    //! Требование ----------------------------
    //!Дублированная api. Требуется разобраться, как получить такие данные
    //!---------------------------------------
    getPostsForCombobox() 
    {
        //return axios.get('/api/getters/posts_for_combobox')
        return axios.get('/api/getters/posts_for_management')
        .then(res => { return res.data.posts;})
        .catch(() => {return undefined;});
    },
    //*Сохранение роли
    //! Комментарий ---------------------------
    //? Реализуется запись данных в таблицу *USERSPOST* (Роли)
    //! Требование ----------------------------
    //!----------------------------------------
    saveUserPost(post) 
    {
        return axios.post('/api/save/post/', post)
        .then(res => {return res.data.id;})
        .catch(() => {return false;});
    },
    //*Удаление роли
    //! Комментарий ---------------------------
    //? Реализуется удаление данных из таблицы *USERSPOST* (Роли)
    //? Передаётся id в функцию
    //! Требование ----------------------------
    //!----------------------------------------
    deleteUserPost(post_id) 
    {
        return axios.post('/api/delete/post/' + post_id)
        .then(() => {return true;})
        .catch(() => {return false;});
    },
    //*Редактирование роли
    //! Комментарий ---------------------------
    //? Реализуется редактирование данных в таблице *USERSPOST* (Роли)
    //? Передаётся ОДИН экземпляр записи 
    //! Требование ----------------------------
    //!----------------------------------------
    editUserPost(post) 
    {
        return axios.post('/api/edit/post/', post)
        .then(() => {return true;})
        .catch(() => {return false;});
    },
}